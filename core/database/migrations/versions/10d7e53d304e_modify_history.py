"""modify history

Revision ID: 10d7e53d304e
Revises: eae592990f33
Create Date: 2023-04-12 20:06:39.660454

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '10d7e53d304e'
down_revision = 'eae592990f33'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('filehistory',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('file_size_kb', sa.BigInteger(), nullable=True),
    sa.Column('file_name_as_received', sa.String(length=255), nullable=True),
    sa.Column('task_id', sa.String(length=255), nullable=True),

    sa.Column('history_status', postgresql.ENUM('pending', 'in_progress', 'success', 'failed', name='status', create_type=False), nullable=True),
                    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_filehistory_file_id'), 'filehistory', ['file_id'], unique=False)
    op.create_index(op.f('ix_filehistory_id'), 'filehistory', ['id'], unique=True)
    op.create_table('filehistoryfailedrows',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('row_number', sa.Integer(), nullable=False),
    sa.Column('number_of_reties', sa.Integer(), nullable=False),
    sa.Column('row_data', sa.JSON(), nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_filehistoryfailedrows_file_id'), 'filehistoryfailedrows', ['file_id'], unique=False)
    op.create_index(op.f('ix_filehistoryfailedrows_history_id'), 'filehistoryfailedrows', ['history_id'], unique=False)
    op.create_index(op.f('ix_filehistoryfailedrows_id'), 'filehistoryfailedrows', ['id'], unique=True)
    op.create_table('filereceivehistorydetail',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('total_rows', sa.Integer(), nullable=True),
    sa.Column('total_success', sa.Integer(), nullable=True),
    sa.Column('total_failure', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_filereceivehistorydetail_file_id'), 'filereceivehistorydetail', ['file_id'], unique=False)
    op.create_index(op.f('ix_filereceivehistorydetail_history_id'), 'filereceivehistorydetail', ['history_id'], unique=False)
    op.create_index(op.f('ix_filereceivehistorydetail_id'), 'filereceivehistorydetail', ['id'], unique=True)
    op.create_table('parser',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('frequency',  postgresql.ENUM('min_1', 'min_15', 'min_30', 'hour_1', 'hour_2', 'hour_3', 'hour_6', 'hour_12', 'hour_24', name='frequency', create_type=False), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('last_run', sa.DateTime(), nullable=True),
    sa.Column('set_active_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parser_id'), 'parser', ['id'], unique=True)
    op.drop_table('celery_taskmeta')
    op.drop_index('ix_filereceivehistory_file_id', table_name='filereceivehistory')
    op.drop_index('ix_filereceivehistory_id', table_name='filereceivehistory')
    op.drop_table('filereceivehistory')
    op.drop_index('ix_processconfig_id', table_name='processconfig')
    op.drop_table('processconfig')
    op.drop_table('celery_tasksetmeta')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_tasksetmeta_pkey'),
    sa.UniqueConstraint('taskset_id', name='celery_tasksetmeta_taskset_id_key')
    )
    op.create_table('processconfig',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('frequency', postgresql.ENUM('min_1', 'min_15', 'min_30', 'hour_1', 'hour_2', 'hour_3', 'hour_6', 'hour_12', 'hour_24', name='frequency', create_type=False), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('process_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_run', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('set_active_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='processconfig_pkey')
    )
    op.create_index('ix_processconfig_id', 'processconfig', ['id'], unique=False)
    op.create_table('filereceivehistory',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('file_size_kb', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('file_name_as_received', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('task_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('total_rows', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_success', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_failure', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('history_status', postgresql.ENUM('pending', 'in_progress', 'success', 'failed', name='status', create_type=False), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='filereceivehistory_pkey')
    )
    op.create_index('ix_filereceivehistory_id', 'filereceivehistory', ['id'], unique=False)
    op.create_index('ix_filereceivehistory_file_id', 'filereceivehistory', ['file_id'], unique=False)
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_taskmeta_pkey'),
    sa.UniqueConstraint('task_id', name='celery_taskmeta_task_id_key')
    )
    op.drop_index(op.f('ix_parser_id'), table_name='parser')
    op.drop_table('parser')
    op.drop_index(op.f('ix_filereceivehistorydetail_id'), table_name='filereceivehistorydetail')
    op.drop_index(op.f('ix_filereceivehistorydetail_history_id'), table_name='filereceivehistorydetail')
    op.drop_index(op.f('ix_filereceivehistorydetail_file_id'), table_name='filereceivehistorydetail')
    op.drop_table('filereceivehistorydetail')
    op.drop_index(op.f('ix_filehistoryfailedrows_id'), table_name='filehistoryfailedrows')
    op.drop_index(op.f('ix_filehistoryfailedrows_history_id'), table_name='filehistoryfailedrows')
    op.drop_index(op.f('ix_filehistoryfailedrows_file_id'), table_name='filehistoryfailedrows')
    op.drop_table('filehistoryfailedrows')
    op.drop_index(op.f('ix_filehistory_id'), table_name='filehistory')
    op.drop_index(op.f('ix_filehistory_file_id'), table_name='filehistory')
    op.drop_table('filehistory')
    # ### end Alembic commands ###
